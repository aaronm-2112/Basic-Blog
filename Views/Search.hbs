<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Search</title>

  <nav>
    <ul>
      <li><a href="{{root}}">Home </a></li>
      <li><a href="{{search}}">Search</a></li>
      <li><a href="{{profile}}">Profile</a></li>
    </ul>
  </nav>
</head>

<body>
  <div id="search-box">
    <h1>Search for Blogs</h1>

    <input type="text" id="query">
    <button id="search">Search</button>
    Author: <input type="checkbox" id="author" name="author" value="author">
    Title: <input type="checkbox" id="title" name="title" value="title">
  </div>

  <div id="search-results"></div>
  <button id="prev" style="display:none">Previous</button>
  <button id="next" style="display:none">Next</button>


  <script>
    //TODO 1: Basic search that returns results that are put on the page x
    //TODO 2: Refine search by adding categories x
    //TODO 3: Refine search by adding pagination to front end and back end if necessary(e.g., if we show 15 results we do not need to collect all 1000 matching blogs for the user) [WIP]
    //script that searches by the client's keywords and returns a set of results
    async function search() {
      //get the search query
      let value = document.getElementById("query").value;

      //get the checkbox values
      let authorCheckbox = document.getElementById("author");
      let categoryCheckbox = document.getElementById("title");

      let authorCheck = authorCheckbox.checked;
      let categoryCheck = categoryCheckbox.checked;

      //set the keyset pagination key --blogid is our keyset pagination key
      let blogid;

      //get the seach results div
      let div = document.getElementById("search-results");

      //clear any results
      clearResults();

      //check if the search results div is empty
      if (div.childElementCount === 0) {
        console.log("0 elems");
        //set the pagination key to 0 
        blogid = 0;
      } else { //else set the pagination key to the last result's blogid value
        //grab the last search result -- this should be an anchor tag
        let lastResult = div.lastChild;
        console.log(lastResult);
        //extract the anchor url from the last search result
        let lastResultUrl = lastResult.href;
        console.log(lastResultUrl);
        //trim the edit value
        lastResultUrl = lastResultUrl.slice(0, lastResultUrl.lastIndexOf('/'));
        //extract the blogid
        blogid = lastResultUrl.slice(lastResultUrl.lastIndexOf('/') + 1);
        console.log(blogid);
      }

      //set the query parameter value 
      let param;
      if (authorCheck && categoryCheck) {
        return;
      } else if (authorCheck) {
        param = "username";
      } else {
        param = "title";
      }

      //send query request to the blog controller
      let response = await fetch(`http://localhost:3000/blog?param=${param}&value=${value}&blogid=${blogid}`, {
        method: 'GET', headers: { 'Content-Type': 'application/json' }
      });

      let blogs = await response.json();

      //place blog results into the search-results div
      let title;
      let username;
      let blogurl;
      for (let i = 0; i < blogs.length; i++) {
        //set title 
        title = blogs[i].title;
        //set the username
        username = blogs[i].username;
        //construct the path to the blog  -- blogID and if editing or not
        blogurl = `http://localhost:3000/blog/${blogs[i].blogid}/false`;

        //create the title DOM element
        let DOMTitle = document.createElement('p');
        DOMTitle.innerText = title;
        console.log(DOMTitle);

        //create the username DOM element
        let DOMUsername = document.createElement('p');
        DOMUsername.innerText = username;

        //create anchor
        let DOMLink = document.createElement('a');
        DOMLink.href = blogurl;
        DOMLink.innerText = "Blog"

        //append results to the search-results div
        div.appendChild(DOMTitle);
        div.appendChild(DOMUsername);
        div.appendChild(DOMLink);

      }
    }

    function clearResults() {
      //get the search-result DOM element
      let searchResultsDiv = document.getElementById("search-results");

      //remove the first result until their are no more results remaining
      while (searchResultsDiv.firstChild) {
        searchResultsDiv.removeChild(searchResultsDiv.firstChild);
      }
    }

    //search event listsner
    document.getElementById("search").addEventListener("click", search); 
  </script>
</body>

</html>